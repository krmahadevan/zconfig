// Signing
apply plugin: 'signing'
signing {
    sign configurations.archives
}


// Deploying
apply plugin: 'maven'

buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath 'com.bmuschko:gradle-nexus-plugin:2.3.1'
    }
}

dependencies {
    /* Jackson Dependencies */
    // https://mvnrepository.com/artifact/com.fasterxml.jackson.core/jackson-core
    compile group: 'com.fasterxml.jackson.core', name: 'jackson-core', version: '2.9.8'
    // https://mvnrepository.com/artifact/com.fasterxml.jackson.core/jackson-databind
    compile group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.9.8'
    // https://mvnrepository.com/artifact/com.fasterxml.jackson.core/jackson-annotations
    compile group: 'com.fasterxml.jackson.core', name: 'jackson-annotations', version: '2.9.8'
    // https://mvnrepository.com/artifact/com.fasterxml.jackson.datatype/jackson-datatype-joda
    compile group: 'com.fasterxml.jackson.datatype', name: 'jackson-datatype-joda', version: '2.9.8'
    // https://mvnrepository.com/artifact/commons-io/commons-io
    compile group: 'commons-io', name: 'commons-io', version: '2.6'
    // https://mvnrepository.com/artifact/com.rabbitmq/amqp-client
    compile group: 'com.rabbitmq', name: 'amqp-client', version: '5.6.0'
}

// Add Javadoc JAR and sources JAR to artifact
task javadocJar(type: Jar) {
    classifier = 'javadoc'
    from javadoc
}

task sourcesJar(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.allSource
}
artifacts {
    archives javadocJar, sourcesJar
}

extraArchive {
    sources = true
    tests = false
    javadoc = false
}

// Build, sign, and upload
uploadArchives {
    repositories {
        mavenDeployer {
            // Destination
            repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
                authentication(userName: NEXUS_USERNAME, password: NEXUS_PASSWORD)
            }
            snapshotRepository(url: "https://oss.sonatype.org/content/repositories/snapshots/") {
                authentication(userName: NEXUS_USERNAME, password: NEXUS_PASSWORD)
            }

            // Add required metadata to POM
            pom.project {
                name 'ZConfig Common Library'
                packaging 'jar'
                description 'ZConfig - Configuration Definition and Auto-wiring.'
                url 'https://github.com/subhagho/zconfig'
                inceptionYear '2012'

                scm {
                    url 'https://github.com/subhagho/zconfig'
                    connection 'scm:https://subhagho@github.com/subhagho/zconfig.git'
                    developerConnection 'scm:git://github.com/subhagho/zconfig.git'
                }

                licenses {
                    license {
                        name 'The Apache License, Version 2.0'
                        url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }

                developers {
                    developer {
                        id 'subhagho'
                        name 'Subho Ghosh'
                        email 'subho.ghosh@outlook.com'
                    }
                }
            }
        }
    }
}
